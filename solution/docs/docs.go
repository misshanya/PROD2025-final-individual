// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "GPL 3.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ads/{adId}/click": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Ads"
                ],
                "summary": "Фиксация перехода по рекламному объявлению",
                "parameters": [
                    {
                        "description": "click",
                        "name": "click",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Click"
                        }
                    },
                    {
                        "type": "string",
                        "description": "UUID рекламного объявления (идентификатор кампании), по которому совершен клик",
                        "name": "adId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/bulk": {
            "post": {
                "description": "Создает или обновляет рекламодателей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisers"
                ],
                "summary": "Создание/обновление рекламодателей",
                "parameters": [
                    {
                        "description": "CampaignRequest",
                        "name": "CreateAdvertisers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Advertiser"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Advertiser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/campaigns/generate": {
            "post": {
                "description": "Генерирует текст рекламы на основе имени рекламодателя и названии рекламы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Генерация текста рекламы",
                "parameters": [
                    {
                        "description": "Информация для генерации текста",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateAdTextRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.GenerateAdTextResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/campaigns/moderation": {
            "patch": {
                "description": "Переключает статус модерации. Может быть true или false",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Переключение модерации",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SwitchModerationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/{advertiserId}": {
            "get": {
                "description": "Возвращает информацию о рекламодателе по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisers"
                ],
                "summary": "Получение рекламодателя по ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Advertiser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/{advertiserId}/campaigns": {
            "get": {
                "description": "Возвращает кампании рекламодателя по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Получение кампаний рекламодателя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID рекламодателя",
                        "name": "advertiserId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Campaign"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает рекламную кампанию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Создание кампании",
                "parameters": [
                    {
                        "description": "CampaignRequest",
                        "name": "CreateCampaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CampaignRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Advertiser ID",
                        "name": "advertiserId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/{advertiserId}/campaigns/{campaignId}": {
            "get": {
                "description": "Возвращает кампанию по ее ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Получение кампании",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID рекламодателя",
                        "name": "advertiserId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID рекламной кампании",
                        "name": "campaignId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет разрешённые параметры рекламной кампании",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Обновление кампании",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет рекламную кампанию по ее ID",
                "tags": [
                    "Campaigns"
                ],
                "summary": "Удаление рекламной кампании",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/{advertiserId}/campaigns/{campaignId}/picture": {
            "post": {
                "description": "Добавляет/обновляет изображение рекламной кампании",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Добавление картинки к рекламной кампании",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID рекламодателя",
                        "name": "advertiserId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UUID рекламной кампании",
                        "name": "campaignId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл изображения для загрузки",
                        "name": "uploadfile",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/bulk": {
            "post": {
                "description": "Создает новых или обновляет существующих клиентов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Массовое создание/обновление клиентов",
                "parameters": [
                    {
                        "description": "Clients",
                        "name": "clients",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.User"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/clients/{clientId}": {
            "get": {
                "description": "Возвращает информацию о клиенте по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Получение клиента по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID клиента",
                        "name": "clientId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ml-scores": {
            "post": {
                "description": "Добавляет или обновляет ML скор для указанной пары клиент-рекламодатель",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisers"
                ],
                "summary": "Добавление или обновление ML скора",
                "parameters": [
                    {
                        "description": "MLScore",
                        "name": "MLScore",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.MLScore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.MLScore"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/time/advance": {
            "post": {
                "description": "Устанавливает текущий день в системе в заданную дату",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Time"
                ],
                "summary": "Установка текущей даты",
                "parameters": [
                    {
                        "description": "Новый текущий день",
                        "name": "newDate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CurrentDate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CurrentDate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Advertiser": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.Campaign": {
            "type": "object",
            "properties": {
                "ad_text": {
                    "type": "string"
                },
                "ad_title": {
                    "type": "string"
                },
                "advertiser_id": {
                    "type": "string"
                },
                "campaign_id": {
                    "type": "string"
                },
                "clicks_limit": {
                    "type": "integer"
                },
                "cost_per_click": {
                    "type": "number"
                },
                "cost_per_impression": {
                    "type": "number"
                },
                "end_date": {
                    "type": "integer"
                },
                "impressions_limit": {
                    "type": "integer"
                },
                "picture": {
                    "type": "string"
                },
                "start_date": {
                    "type": "integer"
                },
                "targeting": {
                    "$ref": "#/definitions/domain.Targeting"
                }
            }
        },
        "domain.CampaignRequest": {
            "type": "object",
            "properties": {
                "ad_text": {
                    "type": "string"
                },
                "ad_title": {
                    "type": "string"
                },
                "clicks_limit": {
                    "type": "integer"
                },
                "cost_per_click": {
                    "type": "number"
                },
                "cost_per_impression": {
                    "type": "number"
                },
                "end_date": {
                    "type": "integer"
                },
                "impressions_limit": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "integer"
                },
                "targeting": {
                    "$ref": "#/definitions/domain.Targeting"
                }
            }
        },
        "domain.Click": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                }
            }
        },
        "domain.CurrentDate": {
            "type": "object",
            "properties": {
                "current_date": {
                    "type": "integer"
                }
            }
        },
        "domain.GenerateAdTextRequest": {
            "type": "object",
            "properties": {
                "ad_title": {
                    "type": "string"
                },
                "advertiser_name": {
                    "type": "string"
                }
            }
        },
        "domain.GenerateAdTextResponse": {
            "type": "object",
            "properties": {
                "ad_text": {
                    "type": "string"
                }
            }
        },
        "domain.MLScore": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "domain.SwitchModerationResponse": {
            "type": "object",
            "properties": {
                "is_moderated": {
                    "type": "boolean"
                }
            }
        },
        "domain.Targeting": {
            "type": "object",
            "properties": {
                "age_from": {
                    "type": "integer"
                },
                "age_to": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "client_id": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "PROD Backend 2025 Advertising Platform API",
	Description:      "API для управления данными клиентов, рекламодателей, рекламными кампаниями, показом объявлений, статистикой и управлением \"текущим днём\" в системе.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
