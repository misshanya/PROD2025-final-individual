version: "3"

services:
  backend:
    build: .

    environment:
      - SERVER_ADDRESS=:8080
      - DATABASE_URL=postgresql://lotty:somepassword@db:5432/proood
      - REDIS_ADDRESS=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - OPENAI_BASE_URL=http://ollama-host:11434/v1/
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY_ID=admin
      - MINIO_SECRET_ACCESS_KEY=admin123
      - MINIO_BUCKET=
      - AI_MODERATION_MODEL=qwen2.5:3b
      - AI_GENERATION_MODEL=qwen2.5:3b
    ports:
      - 8080:8080

    depends_on:
      db:
        condition: service_healthy

    restart: unless-stopped

    networks:
      - prod-network

  db:
    image: postgres:latest

    environment:
      - POSTGRES_USER=lotty
      - POSTGRES_PASSWORD=somepassword
      - POSTGRES_DB=proood

    volumes:
      - db_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lotty -d proood"]
      interval: 5s
      timeout: 5s
      retries: 5

    restart: unless-stopped

    networks:
      - prod-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@example.com
      - PGADMIN_DEFAULT_PASSWORD=mypassword
    ports:
      - 5050:80
    networks:
      - prod-network

  redis:
    image: redis:latest
    networks:
      - prod-network
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio
    restart: unless-stopped
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - prod-network

networks:
  prod-network:
    driver: bridge

volumes:
  db_data:
  minio_data:
